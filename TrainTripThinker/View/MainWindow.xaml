<metro:MetroWindow x:Class="TrainTripThinker.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrainTripThinker.View"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Style="{StaticResource TttWindowStyle}"
        DataContext="{StaticResource MainWindowViewModel}"
        WindowStartupLocation="CenterScreen"
        Closing="OnClosing"
        WindowButtonCommandsOverlayBehavior="Never"
        RightWindowCommandsOverlayBehavior="Never">
    <metro:MetroWindow.Resources>
        <ResourceDictionary Source="ResourceDictionary/MainWindowUI.xaml" />
    </metro:MetroWindow.Resources>
    
    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl>
            <metro:Flyout Header="設定" Position="Right"
                          IsOpen="{Binding IsShowSettings}" 
                          Width="240" Theme="Inverse">
                <local:Settings DataContext="{Binding SettingsViewModel}" />
            </metro:Flyout>
        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>

    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands DataContext="{StaticResource AboutViewModel}">
            <Button Command="{Binding ShowWikiCommand}">
                <md:PackIcon Kind="HelpCircle" />
            </Button>

            <Button Command="{Binding ShowAboutCommand}">
                <md:PackIcon Kind="Information" />
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <ItemsControl Background="{DynamicResource PrimaryHueDarkBrush}">
                <Button Style="{StaticResource MenuButton}" Command="{Binding CreateDocummentCommand}">
                    <md:PackIcon Kind="File" Style="{DynamicResource ModeIcon}" />
                </Button>

                <Button Style="{StaticResource MenuButton}" Command="{Binding OpenFileCommand}">
                    <md:PackIcon Kind="Folder" Style="{DynamicResource ModeIcon}" />
                </Button>

                <Button Style="{StaticResource MenuButton}" Command="{Binding SaveFileCommand}">
                    <md:PackIcon Kind="Floppy" Style="{DynamicResource ModeIcon}" />
                </Button>

                <Button Style="{StaticResource MenuButton}"
                        Command="{Binding CaptureScreenshotCommand}"
                        CommandParameter="{Binding ElementName=itineraryViewer, Mode=OneWay}">
                    <md:PackIcon Kind="Camera" Style="{StaticResource ModeIcon}" />
                </Button>

                <ToggleButton IsChecked="{Binding IsShowSettings}"
                              Style="{StaticResource MenuToggleButton}">
                    <md:PackIcon Kind="Settings" Style="{DynamicResource ModeIcon}" />
                </ToggleButton>
            </ItemsControl>

            <local:ItineraryViewer x:Name="itineraryViewer" Grid.Column="1" />
        </Grid>

        <md:DialogHost IsOpen="{Binding IsShowFileChangeDialog}">
            <md:DialogHost.DialogContent>
                <local:FileChangeDialog />
            </md:DialogHost.DialogContent>
        </md:DialogHost>

        <md:DialogHost DataContext="{StaticResource PrinterSelectorDialogViewModel}"
            IsOpen="{Binding IsShowDialog}">
            <md:DialogHost.DialogContent>
                <local:PrinterSelectorDialog />
            </md:DialogHost.DialogContent>
        </md:DialogHost>

        <md:DialogHost DataContext="{StaticResource AboutViewModel}"
                       IsOpen="{Binding IsShowDialog}">
            <md:DialogHost.DialogContent>
                <local:AboutDialog />
            </md:DialogHost.DialogContent>
        </md:DialogHost>
    </Grid>
</metro:MetroWindow>
